name: Deploy Image to Github Container Registry 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  USER: ${{ github.actor }} #alexssantos
  PACKAGE: ${{ github.repository }} #comparador-metodo-pgto
  IMAGE_NAME: ${{ github.actor }}/${{ github.repository }}
  REGISTRY: ghcr.io
  REGISTRY_URL: ghcr.io/alexssantos/comparador-metodo-pgto

jobs:
  push-store-image:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './ComparadorMetodoPgto/'
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3
     
      - name: set release date
        run: |
          echo "RELEASE_DATE=$(date +%Y%m%d)" >> ${GITHUB_ENV}

      # - name: 'Login to GitHub Container Registry  (puxadinho)'
      #   run: |
      #     echo ${{ secrets.CR_PAT2 }} | docker login ghcr.io -u alexssantos --password-stdin

      - name: 'Login to GitHub Container Registry'
        #docs: https://github.com/docker/login-action
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT2 }}
      

      # - name: Build and Push 1
      #   env:
      #     REGISTRY: ghcr.io
      #     # OWNER: ${{ github.actor }}
      #     IMAGE_NAME: ${{ github.repository }}
      #   uses: docker/build-push-action@v4
      #   with:
      #     # context: ComparadorMetodoPgto
      #     file: ./ComparadorMetodoPgto/Dockerfile          
      #     push: true
      #     tags: |
      #       ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      #     # build-args: |
      #     #   ENVIRONMENT=production
      
      # - name: Build and push 2
      #   uses: docker/build-push-action@v4
      #   with:          
      #     push: true
      #     tags: alexssantos/cm-pgto:latest
   
      - name: Build and push 3
        #docs: https://github.com/docker/build-push-action
        #docs-inputs: https://github.com/docker/build-push-action#inputs
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${RELEASE_DATE}-${GITHUB_SHA:0:7}
          labels:

      # - name: 'Build Inventory Image'
      #   run: |
      #     docker build . --tag $REGISTRY_URL:${RELEASE_DATE}-${GITHUB_SHA:0:7}
      #     docker push $REGISTRY_URL:${RELEASE_DATE}-${GITHUB_SHA:0:7}

